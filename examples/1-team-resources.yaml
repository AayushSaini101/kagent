apiVersion: ai.solo.io/v1alpha1
kind: AutogenTeam
metadata:
  name: pod-scaling-team
  namespace: autogen-system
spec:
  teamName: "pod-scaling-team"
  maxChatRounds: 50
  defaultLLMConfig:
    temperature: 0.7
    requestTimeout: 600
  selector:
    matchLabels:
      team: pod-scaling
---
apiVersion: ai.solo.io/v1alpha1
kind: AutogenAgent
metadata:
  name: task-planner
  namespace: autogen-system
  labels:
    team: pod-scaling
spec:
  name: "TaskPlanner"
  type: "planner"
  llmConfig:
    temperature: 0.7
    requestTimeout: 600
  description: "Task Planner for Kubernetes pod scaling automation"
  systemMessage: |
    You are the Task Planner for Kubernetes pod scaling automation. Your responsibilities:
    1. Analyze scaling requirements and current cluster state
    2. Coordinate between specialized agents to gather metrics and implement changes
    3. Validate proposed changes before implementation
    4. Maintain audit logs of all scaling decisions
    5. Ensure compliance with defined scaling policies

    Workflow:
    1. First gather current metrics and state
    2. Analyze patterns and requirements
    3. Create clear action plans
    4. Verify results after each operation
    5. Document all decisions and outcomes
---
apiVersion: ai.solo.io/v1alpha1
kind: AutogenAgent
metadata:
  name: metrics-analyzer
  namespace: autogen-system
  labels:
    team: pod-scaling
spec:
  name: "MetricsAnalyzer"
  type: "tool_user"
  tools:
    - "prometheus-tool"
    - "metrics-server-tool"
  llmConfig:
    temperature: 0.1
    requestTimeout: 300
  description: "Metrics Analyzer for Kubernetes pod scaling"
  systemMessage: |
    You are the Metrics Analyzer agent specialized in:
    1. Querying Prometheus for resource utilization metrics
    2. Analyzing historical scaling patterns
    3. Processing metrics-server data
    4. Interpreting kube-state-metrics
    5. Generating resource utilization reports

    Always:
    - Use appropriate PromQL queries for metric collection
    - Validate data consistency
    - Provide clear metric summaries
    - Flag anomalies and patterns
---
apiVersion: ai.solo.io/v1alpha1
kind: AutogenAgent
metadata:
  name: kubernetes-operator
  namespace: autogen-system
  labels:
    team: pod-scaling
spec:
  name: "KubernetesOperator"
  type: "tool_user"
  tools:
    - "kubectl-tool"
    - "hpa-tool"
  description: "Kubernetes Operator for managing HPA configurations"
  llmConfig:
    temperature: 0.1
    requestTimeout: 300
  systemMessage: |
    You are the Kubernetes Operator responsible for:
    1. Managing HPA configurations
    2. Adjusting pod resources and limits
    3. Implementing scaling changes
    4. Monitoring pod health during scaling
    5. Managing rollbacks if needed

    Before executing commands:
    1. Validate namespace and resources
    2. Use --dry-run=client when appropriate
    3. Format output as JSON when parsing is needed
    4. Handle errors gracefully
---
apiVersion: ai.solo.io/v1alpha1
kind: AutogenAgent
metadata:
  name: resource-optimizer
  namespace: autogen-system
  labels:
    team: pod-scaling
spec:
  name: "ResourceOptimizer"
  type: "tool_user"
  tools:
    - "vpa-tool"
    - "goldilocks-tool"
  llmConfig:
    temperature: 0.3
    requestTimeout: 300
  description: "Resource Optimizer for Kubernetes pod scaling"
  systemMessage: |
    You are the Resource Optimization agent specialized in:
    1. Analyzing resource usage patterns
    2. Recommending optimal CPU/memory limits
    3. Suggesting HPA configurations
    4. Using tools like Goldilocks and VPA
    5. Preventing resource wastage

    Provide recommendations based on:
    - Historical usage patterns
    - Current workload requirements
    - Cluster capacity
    - Performance requirements
---
apiVersion: ai.solo.io/v1alpha1
kind: AutogenTool
metadata:
  name: prometheus-tool
  namespace: autogen-system
spec:
  type: "http_client"
  baseUrl: "http://prometheus:9090"
  allowedPaths:
    - "/api/v1/query"
    - "/api/v1/query_range"
  timeout: 30
---
apiVersion: ai.solo.io/v1alpha1
kind: AutogenTool
metadata:
  name: metrics-server-tool
  namespace: autogen-system
spec:
  type: "kubernetes_client"
  apiVersion: "metrics.k8s.io/v1beta1"
  resources:
    - "pods"
    - "nodes"
  timeout: 30
---
apiVersion: ai.solo.io/v1alpha1
kind: AutogenTool
metadata:
  name: kubectl-tool
  namespace: autogen-system
spec:
  type: "shell_command"
  path: "/usr/local/bin/kubectl"
  allowedCommands:
    - "get"
    - "describe"
#    - "apply"
#    - "patch"
  environment:
    KUBECONFIG: "/path/to/kubeconfig"
  timeout: 30
